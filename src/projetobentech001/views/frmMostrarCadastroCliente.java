/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetobentech001.views;

import java.awt.Color;
import java.awt.Font;
import javax.swing.table.JTableHeader;
import projetobentech001.conexao.ConexaoMyDB;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import projetobentech001.model.CadastroCliente;

/**
 *
 * @author thome
 */
public class frmMostrarCadastroCliente extends javax.swing.JFrame {

    /**
     * Creates new form frmMostrarCadastroCliente
     */
    public frmMostrarCadastroCliente() {
        initComponents();
        
        //modificar cabecalho jTable
        JTableHeader jth = jTableCliente.getTableHeader();
        jth.setBackground(new Color(51,51,51));
        jth.setForeground(Color.white);
        jth.setFont(new Font("Century Gothic", Font.BOLD, 18));
        jTableCliente.setRowHeight(18);
    }
    
    public Connection conn = null;
    
    public void povoarJtableCliente(String sql){
        
        conn = ConexaoMyDB.getConexao();
        
        try
        {
            PreparedStatement stmt = conn.prepareCall(sql);
            stmt.execute();
            
            ResultSet rs = stmt.executeQuery();
            
            DefaultTableModel model = (DefaultTableModel) jTableCliente.getModel();
            model.setNumRows(0);//para iniciar do primeiro indice da tabela
            
            //tratamento de data
            DateFormat data = new SimpleDateFormat("dd/MM/yyyy");
            
            while(rs.next())
            {
               model.addRow(new Object[]
               {
                  rs.getString("codigo_cliente"),
                  rs.getString("nome"),
                  rs.getString("sobrenome"),    
                  rs.getString("cpf"),
                  data.format(rs.getDate("data")),
                  rs.getString("idade"),
                  rs.getString("sexo"),
                  rs.getInt("id_tb_cadastro")
               });        
            }
                ConexaoMyDB.fecharConexao(conn,stmt,rs);

        }
        
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"Não foi possível obter os dados do banco. Erro: " + ex);
        } 
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnPrincipal = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCliente = new javax.swing.JTable();
        lblPesquisarNome = new javax.swing.JLabel();
        lblPesquisarCpf = new javax.swing.JLabel();
        txtPesquisarNome = new javax.swing.JTextField();
        txtPesquisarCpf = new javax.swing.JTextField();
        btnDeletar = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        txtNControle = new javax.swing.JTextField();
        txtNomeControle = new javax.swing.JTextField();
        lblFechar = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1200, 700));
        setMinimumSize(new java.awt.Dimension(1200, 700));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1200, 700));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jpnPrincipal.setBackground(new java.awt.Color(51, 51, 51));

        jTableCliente.setBackground(new java.awt.Color(102, 102, 102));
        jTableCliente.setForeground(new java.awt.Color(255, 255, 255));
        jTableCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Sobrenome", "CPF", "Data Nascimento", "Idade", "Sexo", "N.Controle"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableCliente.setGridColor(new java.awt.Color(102, 102, 102));
        jTableCliente.setSelectionBackground(new java.awt.Color(216, 0, 72));
        jTableCliente.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jTableCliente.setShowVerticalLines(false);
        jTableCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClienteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableCliente);

        lblPesquisarNome.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblPesquisarNome.setForeground(new java.awt.Color(216, 0, 72));
        lblPesquisarNome.setText("Pesquisar por Nome");

        lblPesquisarCpf.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblPesquisarCpf.setForeground(new java.awt.Color(216, 0, 72));
        lblPesquisarCpf.setText("Pesquisar por CPF");

        txtPesquisarNome.setBackground(new java.awt.Color(153, 153, 153));
        txtPesquisarNome.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txtPesquisarNome.setForeground(new java.awt.Color(255, 255, 255));
        txtPesquisarNome.setBorder(null);
        txtPesquisarNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPesquisarNomeKeyTyped(evt);
            }
        });

        txtPesquisarCpf.setBackground(new java.awt.Color(153, 153, 153));
        txtPesquisarCpf.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txtPesquisarCpf.setForeground(new java.awt.Color(255, 255, 255));
        txtPesquisarCpf.setBorder(null);
        txtPesquisarCpf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPesquisarCpfKeyTyped(evt);
            }
        });

        btnDeletar.setBackground(new java.awt.Color(216, 0, 72));
        btnDeletar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnDeletar.setForeground(new java.awt.Color(255, 255, 255));
        btnDeletar.setText("Deletar");
        btnDeletar.setBorder(null);
        btnDeletar.setFocusable(false);
        btnDeletar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDeletarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDeletarMouseExited(evt);
            }
        });
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });

        btnAtualizar.setBackground(new java.awt.Color(216, 0, 72));
        btnAtualizar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnAtualizar.setForeground(new java.awt.Color(255, 255, 255));
        btnAtualizar.setText("Atualizar");
        btnAtualizar.setBorder(null);
        btnAtualizar.setFocusable(false);
        btnAtualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAtualizarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAtualizarMouseExited(evt);
            }
        });
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        txtNControle.setBackground(new java.awt.Color(153, 153, 153));
        txtNControle.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txtNControle.setForeground(new java.awt.Color(255, 255, 255));
        txtNControle.setBorder(null);
        txtNControle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNControleKeyTyped(evt);
            }
        });

        txtNomeControle.setBackground(new java.awt.Color(153, 153, 153));
        txtNomeControle.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txtNomeControle.setForeground(new java.awt.Color(255, 255, 255));
        txtNomeControle.setBorder(null);
        txtNomeControle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomeControleKeyTyped(evt);
            }
        });

        lblFechar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblFechar.setForeground(new java.awt.Color(255, 255, 255));
        lblFechar.setText("X");
        lblFechar.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                lblFecharAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        lblFechar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblFecharMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jpnPrincipalLayout = new javax.swing.GroupLayout(jpnPrincipal);
        jpnPrincipal.setLayout(jpnPrincipalLayout);
        jpnPrincipalLayout.setHorizontalGroup(
            jpnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1200, Short.MAX_VALUE)
            .addGroup(jpnPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpnPrincipalLayout.createSequentialGroup()
                        .addComponent(lblPesquisarNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPesquisarNome, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpnPrincipalLayout.createSequentialGroup()
                        .addComponent(lblPesquisarCpf)
                        .addGap(33, 33, 33)
                        .addComponent(txtPesquisarCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jpnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnPrincipalLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(btnDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(txtNomeControle, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnPrincipalLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNControle, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblFechar)
                .addContainerGap())
            .addGroup(jpnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jpnPrincipalLayout.createSequentialGroup()
                    .addGap(588, 588, 588)
                    .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(474, Short.MAX_VALUE)))
        );
        jpnPrincipalLayout.setVerticalGroup(
            jpnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblPesquisarNome, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPesquisarNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNControle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblFechar, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPesquisarCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPesquisarCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNomeControle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeletar))
                .addGap(105, 105, 105)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(127, 127, 127))
            .addGroup(jpnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jpnPrincipalLayout.createSequentialGroup()
                    .addGap(22, 22, 22)
                    .addComponent(btnAtualizar)
                    .addContainerGap(712, Short.MAX_VALUE)))
        );

        getContentPane().add(jpnPrincipal, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // carrega os dados na Jtable qquando a frm for aberta
        String sql = "SELECT * FROM tb_cadastro ORDER BY id_tb_cadastro DESC";
        
        //chamamos o metodo para povoar a jtable
        povoarJtableCliente(sql);
        
    }//GEN-LAST:event_formWindowOpened

    private void txtPesquisarNomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarNomeKeyTyped
        // Pesquisa pelo nome
        String sql = "SELECT * FROM tb_cadastro WHERE nome LIKE '%"
                + txtPesquisarNome.getText() 
                + "%' OR  sobrenome LIKE '%"
                + txtPesquisarNome.getText() 
                + "%'"
                + "ORDER BY id_tb_cadastro DESC";
        
        this.povoarJtableCliente(sql);
        
        
    }//GEN-LAST:event_txtPesquisarNomeKeyTyped

    private void txtPesquisarCpfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarCpfKeyTyped
        // Pesquisa pelo Cpf
        String sql = "SELECT * FROM tb_cadastro WHERE cpf LIKE '%"
                + txtPesquisarCpf.getText() + "%'"
                + "ORDER BY id_tb_cadastro DESC";
          
        this.povoarJtableCliente(sql);
        
        
    }//GEN-LAST:event_txtPesquisarCpfKeyTyped

    private void btnDeletarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeletarMouseEntered
       
        btnDeletar.setBackground(Color.red);
    }//GEN-LAST:event_btnDeletarMouseEntered

    private void btnDeletarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeletarMouseExited
        
        btnDeletar.setBackground(new Color(216,0,72));
    }//GEN-LAST:event_btnDeletarMouseExited

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
       //deletar linha escolhida
       if(txtNControle.getText().equals(""))
       {
          JOptionPane.showMessageDialog(null, "Não foi selecionada a linha para ser deletada");
       }
       else
       {
          CadastroCliente.id_tb_cadastro = Integer.parseInt(txtNControle.getText());
          
          int respostaJOptionPane = JOptionPane.showConfirmDialog(null, "Deseja apagar este cadastro?", "Apagar cadastro", JOptionPane.OK_CANCEL_OPTION);
          
         JOptionPane.showMessageDialog(null, "O resultado foi: " + respostaJOptionPane);
                    
          
                 
          
          if(respostaJOptionPane == JOptionPane.OK_OPTION)             
          {
              deletarDados();
              //atualizar a tabela
              String sql = "SELECT * FROM tb_cadastro ORDER BY id_tb_cadastro DESC";
              povoarJtableCliente(sql);
              
              txtNControle.setText("");
              txtNomeControle.setText("");
              
          }
       }
        
    }//GEN-LAST:event_btnDeletarActionPerformed
    //metodo para deletar a linha e os dados
    public void  deletarDados(){
        conn = ConexaoMyDB.getConexao();
        String sql = "DELETE FROM tb_cadastro WHERE id_tb_cadastro = ?";
        
        PreparedStatement stmt = null;
        
        try
        {
            stmt = conn.prepareStatement(sql);
            stmt.setInt(1, CadastroCliente.id_tb_cadastro);
            stmt.executeUpdate();
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"Não foi possível deletar os dados do banco. Erro: " + ex);
        }
    
    }
    private void btnAtualizarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAtualizarMouseEntered
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btnAtualizarMouseEntered

    private void btnAtualizarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAtualizarMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAtualizarMouseExited

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
         //chamar o frmAtualizarCadastro
        if(txtNControle.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Nenhum cliente foi selecionado para atualizar os dados");
        }
        else
        {
            
            //abrir a tela frmAtualizarCadastro
           new frmAtualizarCadastro().setVisible(true); 
           CadastroCliente.id_tb_cadastro = Integer.parseInt(txtNControle.getText());
           
        }
        
        
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void txtNControleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNControleKeyTyped

       
    }//GEN-LAST:event_txtNControleKeyTyped

    private void txtNomeControleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeControleKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeControleKeyTyped

    private void jTableClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClienteMouseClicked
        // passar os valores da JTable para o campo
        int linha = jTableCliente.getSelectedRow();//selecionar a linha e jogar na variavel lliha
        txtNControle.setText(jTableCliente.getValueAt(linha, 7).toString());
        txtNomeControle.setText(jTableCliente.getValueAt(linha, 1).toString());
      
        
        
    }//GEN-LAST:event_jTableClienteMouseClicked

    private void lblFecharAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_lblFecharAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_lblFecharAncestorAdded

    private void lblFecharMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFecharMouseClicked
        this.dispose();
    }//GEN-LAST:event_lblFecharMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMostrarCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMostrarCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMostrarCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMostrarCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmMostrarCadastroCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableCliente;
    private javax.swing.JPanel jpnPrincipal;
    private javax.swing.JLabel lblFechar;
    private javax.swing.JLabel lblPesquisarCpf;
    private javax.swing.JLabel lblPesquisarNome;
    private javax.swing.JTextField txtNControle;
    private javax.swing.JTextField txtNomeControle;
    private javax.swing.JTextField txtPesquisarCpf;
    private javax.swing.JTextField txtPesquisarNome;
    // End of variables declaration//GEN-END:variables

    
}
